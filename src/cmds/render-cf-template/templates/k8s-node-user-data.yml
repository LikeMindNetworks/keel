#cloud-config

# write files
# 1) wait for internet
write_files:
- path: /opt/bin/network-waiter.sh
  owner: root
  content: |
    #! /usr/bin/bash
    until curl www.google.com; do sleep 2; done

coreos:
  etcd2:
    listen-client-urls: http://localhost:2379
    initial-cluster: master=http://${ GET_MASTER_PRIVATE_IP }:2380
    proxy: on

  fleet:
    etcd_servers: http://localhost:2379
    metadata: k8srole=node

  flannel:
    etcd_endpoints: http://localhost:2379

  locksmithd:
    endpoint: http://localhost:2379

  units:
    - name: network-waiter.service
      command: start
      content: |
        [Unit]
        Description=network waiter
        Wants=network-online.target
        After=network-online.target
        Before=download-bin.service
        #
        [Service]
        ExecStartPre=/usr/bin/chmod +x /opt/bin/network-waiter.sh
        ExecStart=/usr/bin/bash /opt/bin/network-waiter.sh
        RemainAfterExit=yes
        Type=oneshot

    - name: download-bin.service
      command: start
      content: |
        [Unit]
        Description=Download required binaries
        Requires=network-waiter.service
        After=network-waiter.service
        #
        [Service]
        ExecStartPre=-/usr/bin/mkdir -p /opt/bin
        #
        ExecStartPre=/usr/bin/wget -N -P /opt/bin https://storage.googleapis.com/kubernetes-release/release/v${ K8S_VERSION }/bin/linux/amd64/kubelet
        ExecStartPre=/usr/bin/wget -N -P /opt/bin https://storage.googleapis.com/kubernetes-release/release/v${ K8S_VERSION }/bin/linux/amd64/kube-proxy
        #
        ExecStart=/usr/bin/chmod +x -R /opt/bin/
        RemainAfterExit=yes
        Type=oneshot

    - name: etcd2.service
      command: start

    - name: fleet.service
      command: start

    - name: flanneld.service
      command: start

    - name: docker.service
      command: start
      drop-ins:
        - name: 50-docker-mirror.conf
          content: |
            [Service]
            Environment=DOCKER_OPTS='--registry-mirror=http://${ GET_MASTER_PRIVATE_IP }:5000'

    - name: kubelet.service
      command: start
      content: |
        [Unit]
        Description=Kubernetes Kubelet
        Documentation=https://github.com/GoogleCloudPlatform/kubernetes
        Requires=network-online.target
        Requires=download-bin.service
        After=download-bin.service
        After=network-online.target
        #
        [Service]
        ExecStart=/opt/bin/kubelet \
          --api-servers=${ GET_MASTER_PRIVATE_IP }:${ K8S_PORT } \
          --hostname-override=$private_ipv4
        Restart=always
        RestartSec=10

    - name: kube-proxy.service
      command: start
      content: |
        [Unit]
        Description=Kubernetes Proxy
        Documentation=https://github.com/GoogleCloudPlatform/kubernetes
        Requires=network-online.target
        After=network-online.target
        #
        [Service]
        ExecStart=/opt/bin/kube-proxy \
          --master=http://${ GET_MASTER_PRIVATE_IP }:${ K8S_PORT }
        Restart=always
        RestartSec=10

  update:
    group: alpha
    reboot-strategy: off
